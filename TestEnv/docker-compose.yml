services:

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - GOnet
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234

    ports:
      - 27018:27017
    volumes:
      - mongodb_data_container:/data/db

    networks:
      - GOnet

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  vault_dev:
    image: hashicorp/vault:latest
    container_name: GOvault
    hostname: GOvault
    restart: on-failure:10
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8201'
      VAULT_LOCAL_CONFIG:
        '{"listener": [{"tcp":{"address": "0.0.0.0:8201",
        "tls_disable": "0", "tls_cert_file":"/data/cert.pem",
        "tls_key_file":"/data/key.pem"}}],
        "default_lease_ttl": "168h", "max_lease_ttl": "720h"},
        "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault-volume:/data
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"

    networks:
      - GOnet

  vault_init:
    image: hashicorp/vault:latest
    command: sh "/app/vault_init.sh"
    depends_on:
      - vault_dev
    healthcheck:
      retries: 5
    volumes:
      - ./vault-init/vault_init.sh:/app/vault_init.sh

    networks:
      - GOnet

volumes:
  mongodb_data_container:
  images_data:
    external: false
  grafana_data:
    external: false

networks:
  GOnet:
    driver: bridge
