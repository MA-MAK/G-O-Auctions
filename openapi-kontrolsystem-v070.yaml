openapi: 3.1.0
info:
  title: Auction API
  version: 0.7.0
paths:
  /api/legal/auctions:
    get:
      summary: Get a list of auctions
      parameters:
        - name: startDate
          in: query
          description: Filter auctions starting 
                        from this date (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date-time
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - id: "8f4c90a7-145c-4a23-bcda-7c8c7e65f4f1"
                  title: "Art Auction"
                  description: "Auction of fine art pieces"
                  startDate: "2023-01-01T12:00:00Z"
                  endDate: "2023-01-10T18:00:00Z"
                  currentBid: 500.00
                  createdBy: "JohnDoe"
                  createdAt: "2023-01-01T10:00:00Z"
                - id: "e3ac8f2b-1a72-4db1-b9b1-3f1d36c0c267"
                  title: "Antique Auction"
                  description: "Auction of rare antiques"
                  startDate: "2023-02-01T14:00:00Z"
                  endDate: "2023-02-10T20:00:00Z"
                  currentBid: 1000.00
                  createdBy: "JaneSmith"
                  createdAt: "2023-02-01T12:00:00Z"
        '404':
          description: No auctions found
          content:
            application/json:
              example:
                error: "No auctions found"
  /api/legal/auctions/{auctionId}:
    get:
      summary: Get details of a specific auction
      parameters:
        - name: auctionId
          in: path
          description: UUID of the auction to retrieve
          required: true
          schema:
            type: string
            format: uuid
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                id: "8f4c90a7-145c-4a23-bcda-7c8c7e65f4f1"
                title: "Art Auction"
                description: "Auction of fine art pieces"
                startDate: "2023-01-01T12:00:00Z"
                endDate: "2023-01-10T18:00:00Z"
                currentBid: 500.00
                createdBy: "JohnDoe"
                createdAt: "2023-01-01T10:00:00Z"
        '404':
          description: Auction not found
          content:
            application/json:
              example:
                error: "Auction not found"
      securitySchemes:
        bearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
  /api/legal/users/{userId}:
    get:
      summary: Get details of a specific user
      parameters:
        - name: userId
          in: path
          description: UUID of the user to retrieve
          required: true
          schema:
            type: string
            format: uuid
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                id: "123e4567-e89b-12d3-a456-426614174001"
                username: "JohnDoe"
                email: "john.doe@example.com"
                registrationDate: "2023-01-01T10:00:00Z"
        '404':
          description: User not found
          content:
            application/json:
              example:
                error: "User not found"
      securitySchemes:
        bearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
  /api/legal/login:
    post:
      summary: User login
      requestBody:
        description: User credentials for login
        required: true
        content:
          application/json:
            example:
              username: "JohnDoe"
              password: "secret123"
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
                eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lI
                iwiaWF0IjoxNTE2MjM5MDIyfQ.
                SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
components:
  schemas:
    Auction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier (UUID) for the auction
        title:
          type: string
          description: The title of the auction
        description:
          type: string
          description: A brief description of the auction
        startDate:
          type: string
          format: date-time
          description: The date and time when the auction starts
        endDate:
          type: string
          format: date-time
          description: The date and time when the auction ends
        currentBid:
          type: number
          format: double
          description: The current highest bid for the auction
        createdBy:
          type: string
          description: The UUID of the user who created the auction
          format: uuid
        purchasedBy:
          type: string
          description: The UUID of the user who won the auction
          format: uuid
        createdAt:
          type: string
          format: date-time
          description: The date and time when the auction was created
      required:
        - id
        - title
        - createdBy
        - createdAt
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier (UUID) for the user
        username:
          type: string
          description: The name of the user
        email:
          type: string
          format: email
          description: The email address of the user
        registrationDate:
          type: string
          format: date-time
          description: The date and time when the user registered
      required:
        - id
        - username
        - email
        - registrationDate
    AuthToken:
      type: object
      properties:
        token:
          type: string
          description: The JWT token for authentication
      required:
        - token
security:
  - bearerAuth: []
